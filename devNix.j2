{% set perPackageManager = {
    "npm": {
        "packages": "pkgs.nodejs_20",
        "install": "if [ -f package-lock.json ]; then npm ci --prefer-offline --no-audit --no-progress; else npm install --prefer-offline --no-audit --no-progress; fi",
        "previewWebPrefix": "\"npm\" \"run\" \"web\" \"--\"",
				"previewAndroidPrefix": "npm run android --",
    },
    "yarn": {
        "packages": "pkgs.yarn",
        "install": "yarn install --frozen-lockfile",
        "previewWebPrefix": "\"yarn\" \"web\" \"--\"",
				"previewAndroidPrefix": "yarn android",
    }
}[packageManager]%}
{ pkgs, ... }: {
  channel = "stable-23.11";
  packages = [
    {{perPackageManager.packages}}
    pkgs.jdk21_headless
    pkgs.gradle
    pkgs.android-tools
    pkgs.watchman
  ];
  idx = {
    extensions = [
      "msjsdiag.vscode-react-native"
      "dbaeumer.vscode-eslint"
      "esbenp.prettier-vscode"
    ];
    workspace = {
      onCreate = {
        install = "{{perPackageManager.install}}";
      };
			onStart = {
				forward-ports = ''
					socat -d -d TCP-LISTEN:5554,reuseaddr,fork TCP:$(cat /etc/resolv.conf | tail -n1 | cut -d " " -f 2):5554
				'';
				connect-device = ''
					adb -s localhost:5554 wait-for-device 
				'';
				android = ''        
					{{packageManager}} run android
				'';
      };
    };
    previews = {
      enable = true;
       previews = {
        web = {
          command = [{{perPackageManager.previewWebPrefix}} "--port" "$PORT"];
          manager = "web";
        };
        android = {
          # noop
          command = ["tail" "-f" "/dev/null"];
          manager = "web";
        };
      };
    };
  };
}
