{% set perPackageManager = {
    "npm": {
        "packages": "pkgs.nodejs_20",
        "install": "if [ -f package-lock.json ]; then npm ci --prefer-offline --no-audit --no-progress; else npm install --prefer-offline --no-audit --no-progress; fi",
        "start": "npm start",
        "android": "\"npm\" \"run\" \"android\"",
        "ios": "\"npm\" \"run\" \"ios\""
    },
    "yarn": {
        "packages": "pkgs.yarn",
        "install": "yarn install --frozen-lockfile",
        "start": "yarn start",
        "android": "\"yarn\" \"android\"",
        "ios": "\"yarn\" \"ios\""
    }
}[packageManager]%}
{ pkgs, ... }: {
  channel = "stable-23.11";
  packages = [
    {{perPackageManager.packages}}
    pkgs.jdk21_headless
    pkgs.gradle
    pkgs.android-tools
    pkgs.watchman
  ];
  idx = {
    extensions = [
      "msjsdiag.vscode-react-native"
      "dbaeumer.vscode-eslint"
      "esbenp.prettier-vscode"
    ];
    workspace = {
      onCreate = {
        install = "{{perPackageManager.install}}";
				setup-android = ''
				# Unset any existing Android SDK variables
        unset ANDROID_SDK_ROOT
        unset ANDROID_HOME

				# Set the correct path
				export ANDROID_HOME="/nix/store/0wqd5nfc2hlx13davkvq2zf3zcy0wr61-androidsdk/libexec/android-sdk"
				
				# Create necessary directories
				mkdir -p $ANDROID_HOME

				# Start Metro in the background
				{{perPackageManager.start}} &
				'';
      };
       onStart = {
        setup-env = ''
          # Unset any existing Android SDK variables
          unset ANDROID_SDK_ROOT
          unset ANDROID_HOME
          
          # Set the correct path
          export ANDROID_HOME="/nix/store/0wqd5nfc2hlx13davkvq2zf3zcy0wr61-androidsdk/libexec/android-sdk"
          
          # Set Gradle properties
          export GRADLE_OPTS="-Dorg.gradle.daemon=true -Dorg.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -Dorg.gradle.configureondemand=true -Dorg.gradle.parallel=true"
        '';
      };
    };
    previews = {
      enable = true;
       previews = {
        web = {
          command = [{{perPackageManager.android}}];
          manager = "web";
        };
        android = {
          # noop
          command = ["tail" "-f" "/dev/null"];
          manager = "web";
        };
      };
    };
  };
}
