{% set perPackageManager = {
    "npm": {
        "packages": "pkgs.nodejs_20",
        "install": "if [ -f package-lock.json ]; then npm ci --prefer-offline --no-audit --no-progress; else npm install --prefer-offline --no-audit --no-progress; fi",
				"android": "\"npm\" \"run\" \"android\"",
				"start": "npm run start"
    },
    "yarn": {
        "packages": "pkgs.yarn",
        "install": "yarn install --frozen-lockfile",
				"previewAndroidPrefix": "yarn android",
				"start": "yarn start"
    }
}[packageManager]%}
{ pkgs, ... }: {
  channel = "stable-23.11";
  packages = [
    {{perPackageManager.packages}}
    pkgs.jdk21_headless
    pkgs.gradle
		pkgs.socat
    pkgs.android-tools
    pkgs.watchman
  ];
  idx = {
    extensions = [
      "msjsdiag.vscode-react-native"
      "dbaeumer.vscode-eslint"
      "esbenp.prettier-vscode"
    ];
    workspace = {
      onCreate = {
        install = ''
					# Install dependencies
					{{perPackageManager.install}}

					unset ANDROID_SDK_ROOT

					# Add more memory to the JVM
          sed -i 's/org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m/org.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=512m/' "android/gradle.properties"
				'';
      };
			onStart = {
				start-metro = ''
          unset ANDROID_SDK_ROOT
          {{perPackageManager.start}}
        '';
        run-android = ''
					unset ANDROID_SDK_ROOT
          
					# Ensure Metro is running first
          if ! pgrep -f "metro"; then
            echo "Starting Metro bundler first..."
            {{perPackageManager.start}} &
            sleep 10
          fi
          
          # Set longer timeout for React Native CLI
          export RN_CLI_CONFIG_TIMEOUT=300000
          {{perPackageManager.android}}
        '';
      };
    };
    previews = {
      enable = true;
       previews = {
				android = {
				# noop
				# command = [{{perPackageManager.android}}];
				command = ["tail" "-f" "/dev/null"];
				manager = "web";
			};
      };
    };
  };
}
